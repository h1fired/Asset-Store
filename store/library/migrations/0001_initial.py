# Generated by Django 4.2.1 on 2023-05-20 20:29

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import django_resized.forms


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128)),
            ],
        ),
        migrations.CreateModel(
            name='PublicAsset',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128, unique=True, validators=[django.core.validators.RegexValidator('^[a-zA-Z ]*$', 'Only letters are allowed.')])),
                ('type', models.CharField(choices=[('material', 'Material'), ('model', 'Model'), ('hdri', 'HDRI')], max_length=64)),
                ('upload_time', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
                ('preview', django_resized.forms.ResizedImageField(crop=None, force_format='WEBP', keep_meta=True, quality=75, scale=None, size=[512, 512], upload_to='assets/previews/')),
                ('max_resolution', models.CharField(choices=[('1K', '1K'), ('2K', '2K'), ('4K', '4K'), ('8K', '8K')], max_length=12)),
                ('subscription', models.BooleanField(default=False)),
                ('status', models.CharField(choices=[('active', 'Active'), ('hidden', 'Hidden'), ('blocked', 'Blocked'), ('review', 'Review')], default='review', max_length=64)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='%(app_label)s_%(class)s_assets', to=settings.AUTH_USER_MODEL)),
                ('tags', models.ManyToManyField(blank=True, related_name='%(app_label)s_%(class)s_tags', to='library.tag')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PrivateAsset',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128, unique=True, validators=[django.core.validators.RegexValidator('^[a-zA-Z ]*$', 'Only letters are allowed.')])),
                ('type', models.CharField(choices=[('material', 'Material'), ('model', 'Model'), ('hdri', 'HDRI')], max_length=64)),
                ('upload_time', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
                ('preview', django_resized.forms.ResizedImageField(crop=None, force_format='WEBP', keep_meta=True, quality=75, scale=None, size=[512, 512], upload_to='assets/previews/')),
                ('max_resolution', models.CharField(choices=[('1K', '1K'), ('2K', '2K'), ('4K', '4K'), ('8K', '8K')], max_length=12)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='%(app_label)s_%(class)s_assets', to=settings.AUTH_USER_MODEL)),
                ('tags', models.ManyToManyField(blank=True, related_name='%(app_label)s_%(class)s_tags', to='library.tag')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Collection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128, unique=True, validators=[django.core.validators.RegexValidator('^[a-zA-Z ]*$', 'Only letters are allowed.')])),
                ('assets', models.ManyToManyField(related_name='collection', to='library.publicasset')),
            ],
        ),
    ]
